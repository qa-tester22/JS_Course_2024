/*

Заполнение массивов

Вы можете добавлять значения в массив при его первом создании или просто создать массив, а затем добавлять в него элементы позже. Добавление элементов в массив работает точно так же, как создание или изменение переменной, за исключением того, что вы указываете порядковый номер элемента, который хотите создать или изменить.
*/

let year_2023 = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

console.log(year_2023 + " - year_2023");

let year_2024 = [];

year_2024[0] = 'January'
year_2024[1] = 'February';
year_2024[2] = 'March';
// year_2024[3] = 'April';
// year_2024[4] = 'May';
// year_2024[5] = 'June';
// year_2024[6] = 'July';
// year_2024[7] = 'August';
// year_2024[8] = 'September';
year_2024[9] = 'October';
year_2024[10] = 'November';
year_2024[11] = 'December';

console.log(year_2024 + " - year_2024");

let year_2025 = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');

console.log(year_2025  + " - year_2025");

/*
Не всегда нужно добавлять элементы последовательно. В JavaScript совершенно законно создавать новый элемент вне последовательности. Например, в предыдущий массив  вы можете добавить следующее:
*/

year_2025[100] = " - it is the year_2025.";

console.log(year_2025  + " - year_2025");

/*
Создание такого массива вне последовательности эффективно создает пустые элементы для всех индексов между year_2025[11] и year_2025[100].

Итак, если вы проверите свойство length массива year_2025 после добавления элемента с индексом 100, произойдет кое-что интересное:
*/

console.log(year_2025.length); // возвращает 101

/*
Даже если вы создали только четыре элемента, JavaScript сообщит, что длина массива равна 100, поскольку длина основана на индексе с наибольшим номером, а не на том, сколько элементов вы фактически создали.
*/

let arr = [];

arr[99] = "one hundred";

console.log(arr);
