// Задачи Loops (for(;;), for in, for of, while, do while). Nested loops. break, continue.

// 1. У вас есть массив чисел, нужно наполнить массив числами первого массива, умноженными на 2.
const nums = [3, 88, 65, 5, 9];


// 2. Зарплата сотрудников salary = [1200, 2400, 3700, 750] повысилась в три раза. Выведите ответ в виде массива действительного размера заробоной платы сотрудников, используя цикл (for of).
 

// 3. Антон гуляет со щенком каждые 2 часа. Сколько раз в сутки Антон гуляет со щенком, если кутенок просыпается в 6 утра и ложиться спать в 10 вечера?

//  4. Преобразуйте многомерный массив в одномерный массив разными способами (классический for, for in, for of).
const multiArr = [[1,2], [3,4], [5,6]];

// 5. Сумма из двух. Можно ли из элементов массива arr = [1234, 5678, 9012] получить искомое число target = 14690?

const arr = [1234, 5678, 9012];
let target = 14690;

// 6. Написать программу, которая находит сумму чисел массива от нулевого до первого отрицательного. Встретившееся первое отрицательное число массива не должно входить в результативную сумму.
// program to find the sum of positive numbers
// if the user enters a negative numbers, the loop ends
// the negative number entered is not added to sum

const digits = [1, 32, 73, 4, 59, -16, 47, -85, 69, -10];


// 7. Написать программу, которая добавляет в приходящую строку пробелы между символами. К пробелу между словами дополнительный пробел не требуется. Решить с помощью циклов for, for of, for in, while

let taskString - "This is winter."

// 8.  Задача:
// У нас есть массив булевых значений. Нам нужно определить, все ли значения в массиве равны `true`. Если хотя бы одно значение в массиве не равно `true`, мы устанавливаем переменную `allTrue` в значение `false`, иначе - в `true`.

const booleanArray = [true, true, false, true, true];


// 9. Нарисовать шаблон фигур

/*
1)
*****
*****
*****
*****
*****

2)
*****
*   *
*   *
*   *
*****

3)
*
**
***
****
*****

4)
    *
   **
  ***
 ****
*****

5)
    *
   ***
  *****
 *******
*********

6)
*****
****
***
**
*

7)
$
$$
$$$
$$$$
%%%%%
%%%%
%%%
%%
%

8. С помощью двух вложенных циклов нарисуйте следующую пирамидку:

1
22
333
4444
55555
666666
7777777
88888888
999999999

9. С помощью двух вложенных циклов нарисуйте следующую пирамидку:

        1
       2 3 
      4 5 6
    7 8 9 10
 11 12 13 14 15
16 17 18 19 20 21



*/