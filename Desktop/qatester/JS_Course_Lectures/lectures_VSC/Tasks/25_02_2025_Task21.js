// Задача 21. О Ключевом слове this в объектах JS.
"Что будет значением 'this' внутри функции, если она вызвана как метод объекта?"

const person = {
    name: 'John',
    age: 30,
    sayHello: function() {
        console.log('Hello, my name is ' + this.name);
    }
};

person.sayHello(); 

const Fedot = {
    name: "Fedot",
    age: 25
};

person.sayHello.call(Fedot);
/*
// Варианты ответов:

    1. "Глобальный объект window",
    2. "Объект, для которого вызвана функция",
    3. "Прототип объекта, для которого вызвана функция",
    4. "Undefined"

Выберите один ответ.
/ можно просто нажать на нужную цифру-эмоджи или в комментариях ответить. Если что-то не понятно - задавайте вопросы в комментариях.
:one:   :two:   :three:   :four:
//**************************************************************************************
// Правильный ответ
2. Объект, для которого вызвана функция";

Правильный ответ на вопрос о значении ключевого слова `this` внутри функции, вызванной как метод объекта, - "Объект, для которого вызвана функция".

Ключевое слово `this` в JavaScript ссылается на объект, в контексте которого была вызвана функция. Когда функция вызывается как метод объекта, `this` указывает на этот объект.

Например, в представленном коде:


const person = {
    name: 'John',
    age: 30,
    sayHello: function() {
        console.log('Hello, my name is ' + this.name);
    }
};

person.sayHello(); // Вызов метода объекта


Когда вызывается метод `sayHello()` объекта `person`, `this` ссылается на сам объект `person`. Таким образом, внутри функции `sayHello()`, когда мы используем `this.name`, мы обращаемся к свойству `name` объекта `person`, которое содержит значение `'John'`.
*/
