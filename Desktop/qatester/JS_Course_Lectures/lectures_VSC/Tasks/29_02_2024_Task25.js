/*
Задача 25. Использование методов строк и стрелочной функции:
*/

const text = "Hello, world!";

// Методы строк в JavaScript
const upperCaseText = text.toUpperCase(); // Преобразует строку в верхний регистр
const lowerCaseText = text.toLowerCase(); // Преобразует строку в нижний регистр

// Стрелочная функция для обрезки текста
const truncateText = (str, maxLength) => {
  return str.length > maxLength ? str.slice(0, maxLength) + '...' : str;
}

const truncatedText = truncateText(text, 5); // Обрезает текст до 5 символов

console.log("Upper case:", upperCaseText);
console.log("Lower case:", lowerCaseText);
console.log("Truncated text:", truncatedText);

/*

Вопрос: Какой вариант правильно использует методы строк в JavaScript для обработки текста, чтобы получить текст в нижнем регистре с заданной длиной строки 5?

1) 
*/
const modifiedText1 = text.toUpperCase().slice(0, 5);

// 2)
const modifiedText2 = text.toLowerCase().slice(0, 5);


// 3)
const modifiedText3 = text.slice(0, 5).toUpperCase();


// 4)
const modifiedText4 = text.slice(0, 5).toLowerCase();


/*
  
  / можно просто нажать на нужную цифру-эмоджи или в комментариях ответить. Если что-то не понятно - задавайте вопросы в комментариях.
  :one:   :two:   :three:   :four:

  //**************************************************************************************
  // Правильный ответ: 2, 4. 

  Разница между вариантами 2) и 4) заключается в порядке применения методов к строке.

- Вариант 2) сначала применяет метод `toLowerCase()` для преобразования строки в нижний регистр, а затем метод `slice()` для обрезки текста. Таким образом, изначальная строка будет преобразована в нижний регистр перед обрезкой.

- Вариант 4) сначала применяет метод `slice()` для обрезки текста до первых 5 символов, а затем метод `toLowerCase()` для преобразования обрезанного текста в нижний регистр. Таким образом, текст будет обрезан до 5 символов до изменения регистра.

По скорости выполнения сложно сказать, какой из этих вариантов будет быстрее, так как это зависит от реализации движка JavaScript и других факторов. В общем случае, скорость выполнения этих операций должна быть сопоставимой. Однако в конкретных ситуациях результаты могут отличаться, поэтому для оценки производительности рекомендуется проводить бенчмаркинг или тестирование в контексте конкретной среды выполнения.

 в случае с очень длинной строкой обычно предпочтительнее сначала отрезать ненужное количество символов, а затем преобразовать полученную подстроку в нижний регистр. Это может помочь оптимизировать производительность, особенно если длина строки значительно превышает необходимую длину.

Последовательное применение методов `slice()` и `toLowerCase()` в варианте 4) позволяет избежать лишних операций над символами, которые все равно будут отброшены. Таким образом, это может сэкономить ресурсы и ускорить выполнение операций, особенно если строка содержит большое количество символов.

Следовательно, в случае очень длинных строк рекомендуется использовать вариант 4) для обрезки ненужной части строки перед преобразованием в верхний регистр.
**********************************************************************************************





1) 

// const text = "Hello, world!";
const modifiedText1 = text.toUpperCase().slice(0, 5);
console.log("Modefied text 1 :", modifiedText1);

// 2)

// const text = "Hello, world!";
const modifiedText2 = text.toLowerCase().slice(0, 5);
console.log("Modefied text 2 :", modifiedText2);


// 3)

// const text = "Hello, world!";
const modifiedText3 = text.slice(0, 5).toUpperCase();
console.log("Modefied text 3 :", modifiedText3);


// 4)

// const text = "Hello, world!";
const modifiedText4 = text.slice(0, 5).toLowerCase();
console.log("Modefied text 4 :", modifiedText4);


// Какой из этих вариантов правильно использует методы строк и стрелочную функцию для обработки текста?
*/