/*
Задача 18. JavaScript с массивом внутри функции и циклом `for...in`:
*/
let myArray = ["apple", "banana", "orange"];

function iterateArray(array) {
    
    for (let index in array) {
        console.log(array[index]);
    }
}

iterateArray(myArray);

/*
Варианты ответов:

1. Цикл будет выполняться, но пропустит элементы массива.
2. Цикл завершится с ошибкой, так как `for...in` не предназначен для работы с массивами.
3. Цикл выполнится успешно, перебирая все элементы массива.
4. Цикл выполнится успешно, но пропустит первый элемент массива.

Выберите один ответ:
/ можно просто нажать на нужную цифру-эмоджи или в комментариях ответить. Если вообще ничего не понятно - задавайте вопросы в комментариях
:one:   :two:   :three:   :four:
*/

/*
Верный ответ: Вариант ответа 3.

Цикл выполнится успешно, перебирая все элементы массива. В цикле `for...in` переменная `index` будет принимать значения индексов элементов массива, и цикл пройдет по всем элементам массива `myArray`, выводя каждый из них в консоль.
Цикл `for...in` в JavaScript предназначен для перебора свойств объектов. Однако он также может использоваться для перебора элементов массива, поскольку массивы в JavaScript являются объектами. В этом случае переменная, используемая в цикле (`index` в данном случае), будет содержать индексы элементов массива.

При использовании `for...in` цикла по массиву JavaScript перебирает не только индексы элементов, но и все перечисляемые свойства объекта, включая свойства, унаследованные от прототипа. Поэтому обычно рекомендуется использовать обычный цикл `for` или методы перебора массива, такие как `forEach`, чтобы избежать нежелательного поведения.

В данном случае, несмотря на то, что использование `for...in` с массивом не является наилучшей практикой из-за возможности перебора не только элементов, но и других свойств, в коде он все же будет успешно перебирать элементы массива и выводить их в консоль.
*/