/*
IIFE - "immediately-invoked function expressions"
В прошлом, поскольку существовал только var, а он не имел блочной области видимости, программисты придумали способ её эмулировать. Этот способ получил название «Immediately-invoked function expressions» (сокращенно IIFE).

Это не то, что мы должны использовать сегодня, но, так как вы можете встретить это в старых скриптах, полезно понимать принцип работы.

IIFE выглядит следующим образом:
*/
(function() {
    var message = "Hello!";

    console.log(message);
})();

/*
Здесь создаётся и немедленно вызывается Function Expression. Так что код выполняется сразу же и у него есть свои локальные переменные.

Function Expression обёрнуто в скобки (function {...}), потому что, когда JavaScript встречает "function" в основном потоке кода, он воспринимает это как начало Function Declaration. Но у Function Declaration должно быть имя, так что такой код вызовет ошибку:
*/

// function() {
//     var message = "Hello!";

//     console.log(message);
// }();

// SyntaxError: Function statements require a function name

/*
Даже если мы скажем: «хорошо, давайте добавим имя», – это не сработает, потому что JavaScript не позволяет вызывать Function Declaration немедленно. из-за скобок ниже
// */
// function go() {

// }();

// SyntaxError: Unexpected token ')'

/*
Так что скобки вокруг функции – это трюк, который позволяет объяснить JavaScript, что функция была создана в контексте другого выражения, а значит, что это Function Expression: ей не нужно имя и её можно вызвать немедленно.

Помимо круглых скобок существуют и другие способы сообщить JavaScript, что мы имеем в виду Function Expression:
*/

(function() {
    console.log('Круглые скобки вокруг функции');
})();
// Круглые скобки вокруг функции

(function() {
    console.log('Круглые скобки вокруг всего выражения');
}());
// Круглые скобки вокруг всего выражения

!function () {
    console.log('Выражение начинается с логического оператора НЕ !');
}();
// Выражение начинается с логического оператора НЕ !

+function() {
    console.log('Выражение начинается с унарного плюса');
}();
// Выражение начинается с унарного плюса

/*
Во всех перечисленных случаях мы объявляем Function Expression и немедленно запускаем его. Ещё раз отметим: в настоящее время необходимости писать подобный код нет.
*/