/*
NaN означает «не число». Это результат, который вы получаете, когда пытаетесь выполнить математические операции со строкой или когда вычисление не удается или невозможно выполнить. Например, невозможно вычислить квадратный корень из отрицательного числа. Попытка сделать это приведет к результату NaN.



Более частым явлением, приводящим к созданию NaN, является попытка выполнить математические операции с использованием строк, которые невозможно преобразовать в числа.



undefined data type
 

Even if you create a variable in JavaScript and don’t specifically give it a value, it still has a default value. This value is "undefined".




Undefined /неопределенный/ тип данных
 

Даже если вы создаете переменную в JavaScript и не присваиваете ей значение, она все равно имеет значение по умолчанию. Это значение «undefined». «не определено»

*/
/*
примеры и объяснения для `NaN`, `undefined` и `null` в JavaScript:

1. **NaN (Not a Number)**:

   `NaN` - это специальное значение в JavaScript, которое обозначает "не число". Оно возвращается в случае выполнения математической операции, которая не может быть выполнена и возвращает нечисловой результат. Например, деление на ноль или попытка преобразовать нечисловое значение в число.

   Пример:
   ```javascript
   let result = 10 / "строка";
   console.log(result); // Выведет: NaN
   ```

2. **undefined**:

   `undefined` - это специальное значение, которое указывает на то, что переменная была объявлена, но не была проинициализирована и не имеет значения. Возвращается, если переменная не имеет назначенного значения, или функция не возвращает значение.

   Пример:
   ```javascript
   let x;
   console.log(x); // Выведет: undefined

   function foo() {
       // Функция не возвращает значение
   }
   console.log(foo()); // Выведет: undefined
   ```

3. **null**:

   `null` - это специальное значение, которое указывает на отсутствие значения. Оно может быть явно присвоено переменной в коде. Обычно используется, когда значение переменной должно быть пустым или неопределенным.

   Пример:
   ```javascript
   let y = null;
   console.log(y); // Выведет: null
   ```

Эти значения имеют различные семантические значения и используются для разных целей в JavaScript.
*/