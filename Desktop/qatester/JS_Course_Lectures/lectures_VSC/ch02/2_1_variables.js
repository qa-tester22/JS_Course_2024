// Переменные — это репрезентативные имена в программе. 
// Вы можете думать о переменных как о контейнерах, содержащих данные. Вы можете дать этим контейнерам имена, а позже сможете вызвать и изменить данные в переменной, используя ее имя.
// без переменных каждую программу можно использовать только 1 раз. Эту программу не будешь использовать много раз.
console.log(20 + 24);  // 44

//Но программу для сложения любых 2-х чисел можно использовать много раз.
let firstNumber = 20;
let secondNumber = 24;
let sum = firstNumber + secondNumber;
console.log(sum);  // 44 -тот же результат, но мы можем поменять 20 и 24, а программа та же.

// На 7,8,9 строках мы создали переменную. 
//Объявление (декларирование, инициализация) переменной — это технический термин, используемый для описания процесса первого создания переменной в программе.
// let, const, var - ключевые слова.
let myLastName;  // Переменная, созданная с использованием ключевого слова var, будет иметь начальное значение неопределенное, если только вы не зададите ей значение при ее создании.
const myAge = 25;  // выдаст ошибку - для const нужно сразу задавать значение. 
var myJob;

let myName = "JavaScript";
const age = 25;
var job = "developer";
address = "USA";  // без ключевого слова.-лучше не использовать.
console.log(address);
// = это не знак равно. 
// Символ, похожий на знак равенства между именем переменной (myName) и значение («JavaScript») в предыдущем примере может выглядеть точно так же, как знак равенства, и это даже производится с использованием ключа, который обычно называется знаком равенства на клавиатуре. 
// Однако в программировании знак равенства на самом деле называется оператор присваивания.
// ✓✓Оператор присваивания устанавливает значение:  левая часть равна той, что справа из этого, вот так:
let myfirstName = "Алеша";
//✓✓ «Равно» сравнивает значение слева значению справа и определяет одинаковые они или нет.
//Равно в JavaScript записывается как ===.
// Обратите внимание на кавычки вокруг значения справа в предыдущих примерах. Эти кавычки указывают на то, что значение следует рассматривать как текст, а не как число, ключевое слово JavaScript или другую переменную.

// JavaScript имеет два типа области действия:

// ✓✓Глобальные переменные можно использовать где угодно внутри программы.

// ✓✓Локальные (функциональные) переменные — это переменные, которые вы создаете внутри защищенной программы внутри программы, называемой функцией.